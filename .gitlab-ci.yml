stages:
  - test
  - deploy

# test-job:
#   stage: test
#   script:
#     - pip3 install -r requirements.txt
#     - cd ./drpproject
#     - python3 manage.py test drpapp/test

deploy-job-vm:
  stage: deploy
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'
  script:
    - docker build . --tag drpapp:latest --label drpapplabel --file ./Dockerfile --build-arg DB_PASSWORD=${DB_PASSWORD}
    - docker stop $(docker ps -a -q)
    - docker rm $(docker ps -a -q)
    - docker image prune --force --filter='label=drpapplabel'
    - fuser -k 8000/tcp || true
    - docker run --detach -p 8000:8000 drpapp

deploy-job-heroku:
  stage: deploy
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'
  script:
    - docker build -t registry.heroku.com/${HEROKU_APP_NAME}/web --build-arg DB_PASSWORD=${DB_PASSWORD} .
    - docker push registry.heroku.com/${HEROKU_APP_NAME}/web
    - heroku container:release web --app ${HEROKU_APP_NAME}
    - dpl heroku api --app ${HEROKU_APP_NAME} --api_key ${HEROKU_API_KEY}

##############################
# Experimental
##############################
experiment-deploy-vm:
  stage: deploy
  tags:
    - experiment
  rules:
    - if: '$CI_COMMIT_REF_NAME == "databaseSetup"'
  script:
    - docker build . --tag drpapp:latest --label drpapplabel --file ./Dockerfile --build-arg DB_PASSWORD=${DB_PASSWORD}
    - docker stop $(docker ps -a -q)
    - docker rm $(docker ps -a -q)
    - docker image prune --force --filter='label=drpapplabel'
    - fuser -k 8000/tcp || true
    - docker run --detach -p 8000:8000 drpapp